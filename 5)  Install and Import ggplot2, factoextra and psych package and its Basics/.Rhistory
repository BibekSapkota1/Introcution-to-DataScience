data("diamonds")
data("Diamonds")
data("Diamonds")
data("mtcars")
data("Diamonds")
data("Diamond")
data("diamond")
data("diamonds")
data("diamonds")
data("diamond")
data("diamonds")
data("Diamonds")
head(diamonds)
data("diamonds")
data("diamonds")
data("diamonds")
head(diamonds)
install.packages("ggplot2")
library(ggplot2)
data("diamonds")
head(diamonds)
#install.packages("ggplot2")
#library(ggplot2)
data("diamonds")
head(diamonds)
data("diamonds")
data("diamonds")
head(mtcars)
head(mtcars)
head(diamonds)
tail(diamonds)
head(diamonds,10)
str(diamonds)
dim(diamonds)
summary(diamondss)
summary(diamonds)
package_name <- "psych"
if (!requireNamespace(package_name, quietly = TRUE)) {
install.packages(package_name)
}
library(psych)
describe(diamonds)
hist(diamonds$mpg)
data("mtcars")
head(mtcars)
tail(mtcars)
head(mtcars,10)
str(mtcars)
dim(mtcars)
summary(mtcars)
package_name <- "psych"
if (!requireNamespace(package_name, quietly = TRUE)) {
install.packages(package_name)
}
library(psych)
describe(mtcars)
hist(mtcars$mpg)
hist(mtcars$mpg, col='aquamarine')
hist(mtcars$mpg, col='aquamarine', xlab = "MPG (Miles Per Gallon)")
boxplot(mtcars)
boxplot(mtcars$gear)
boxplot(mtcars$gear,
xlab="Gears",
ylab="Values")
boxplot(mpg ~ cyl, data = mtcars,
xlab = "Number of Cylinders",
ylab = "Miles per Gallon",
main = "Boxplot of MPG by Number of Cylinders")
plot(mtcars$mpg, mtcars$wt)
trans_dist <- table(mtcars$am)
pie(trans_dist,
labels = c("Automatic", "Manual"),
main = "Distribution of Transmissions (Automatic vs. Manual)")
pairs(mtcars[, c("mpg", "disp", "hp", "wt")],
main = "Scatterplot Matrix")
package_name <- "ggplot2"
if (!requireNamespace(package_name, quietly = TRUE)) {
install.packages(package_name)
}
library(ggplot2)
ggplot(mtcars, aes(x = mpg),) +
geom_histogram()
ggplot(mtcars, aes(x = mpg, fill = factor(mpg))) +
geom_histogram(bins = 10)
ggplot(mtcars, aes(x = mpg)) +
geom_histogram(fill = 'aquamarine', bins = 5) +
xlab("MPG (Miles Per Gallon)")
ggplot(mtcars, aes(x= factor('gear'),y=gear)) +
geom_boxplot()+
ylab("Value") +
xlab("Gear")
ggplot(mtcars, aes(x= factor(cyl),y=mpg))+
geom_boxplot()+
xlab("NumberofCylinders") +
ylab("MilesperGallon") +
ggtitle("BoxplotofMPGbyNumberofCylinders")
ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point()
hist(diamonds$mpg, col='aquamarine')
hist(diamonds$carat)
hist(diamonds$carat, col='aquamarine')
hist(diamonds$carat, col='aquamarine', xlab = "MPG (Miles Per Gallon)")
hist(diamonds$carat, col='aquamarine', xlab = "Carat")
hist(diamonds$carat, col='aquamarine', ylab = "")
hist(diamonds$carat, col='aquamarine', xlab = "Carat")
boxplot(diamonds)
boxplot(diamonds$color)
boxplot(diamonds$price)
boxplot(mtcars$price,
xlab="price",
ylab="Values")
boxplot(diamonds$price,
xlab="price",
ylab="Values")
boxplot(carat ~ price , data = diamonds,
xlab = "Number of Cylinders",
ylab = "Miles per Gallon",
main = "Boxplot of MPG by Number of Cylinders")
boxplot(carat ~ price , data = diamonds,
xlab = "price",
ylab = "Carat",
main = "Boxplot of carat by price")
plot(diamonds$carat, diamonds$clarity)
trans_dist <- table(diamonds$am)
trans_dist <- table(diamonds$carat)
pie(trans_dist,
labels = c("Automatic", "Manual"),
main = "Distribution of Transmissions (Automatic vs. Manual)")
pie(trans_dist,
labels = c("carat", "price"),
main = "Distribution of Transmissions (Automatic vs. Manual)")
trans_dist <- table(diamonds$price)
pie(trans_dist,
labels = c("carat", "price"),
main = "Distribution of Transmissions (Automatic vs. Manual)")
trans_dist <- table(diamonds$color)
pie(trans_dist,
labels = c("carat", "price"),
main = "Distribution of Transmissions (Automatic vs. Manual)")
pie(trans_dist,
labels = c("E", "I", "J", "H"),
main = "Distribution of Transmissions (Automatic vs. Manual)")
pairs(diamonds[, c("carat", "price", "depth", "table")],
main = "Scatterplot Matrix")
package_name <- "ggplot2"
if (!requireNamespace(package_name, quietly = TRUE)) {
install.packages(package_name)
}
library(ggplot2)
ggplot(diamonds, aes(x = carat),) +
geom_histogram()
ggplot(diamonds, aes(x = mpg, fill = factor(carat))) +
geom_histogram(bins = 10)
ggplot(diamonds, aes(x = carat)) +
geom_histogram(fill = 'aquamarine', bins = 5) +
xlab("MPG (Miles Per Gallon)")
ggplot(diamonds, aes(x= factor('depth'),y=depth)) +
geom_boxplot()+
ylab("Value") +
xlab("depth")
ggplot(diamonds, aes(x= factor(carat),y=price))+
geom_boxplot()+
xlab("carat") +
ylab("price") +
ggtitle("Box plot of carat by price")
ggplot(mtcars, aes(x = carat, y = depth)) +
geom_point()
ggplot(diamonds, aes(x = carat, y = depth)) +
geom_point()
ggplot(diamonds, aes(x = carat, fill = cut)) +
geom_histogram(bins = 30, position = "identity", alpha = 0.5) +
theme_minimal() +
labs(title = "Distribution of Diamond Carat Sizes by Cut",
x = "Carat",
y = "Count",
fill = "Cut")
ggplot(diamonds, aes(x = carat)) +
geom_histogram(fill = 'aquamarine', bins = 5) +
xlab("MPG (Miles Per Gallon)")
ggplot(diamonds, aes(x = carat)) +
geom_histogram(fill = 'aquamarine', bins = 5) +
xlab("")
ggplot(diamonds, aes(x= factor(table),y=price))+
geom_boxplot()+
xlab("carat") +
ylab("price") +
ggtitle("Box plot of carat by price")
ggplot(diamonds, aes(x= factor(cut),y=color))+
geom_boxplot()+
xlab("carat") +
ylab("price") +
ggtitle("Box plot of carat by price")
ggplot(diamonds, aes(x= factor(carat),y=color))+
geom_boxplot()+
xlab("carat") +
ylab("price") +
ggtitle("Box plot of carat by price")
ggplot(diamonds, aes(x= factor(cut),y=color))+
geom_boxplot()+
xlab("carat") +
ylab("price") +
ggtitle("Box plot of carat by price")
ggplot(diamonds, aes(x = carat, y = depth)) +
geom_point()
package_name <- "ggplot2"
if (!requireNamespace(package_name, quietly = TRUE)) {
install.packages(package_name)
}
library(ggplot2)
package_name <- "ggplot2"
if (!requireNamespace(package_name, quietly = TRUE)) {
install.packages(package_name)
}
library(ggplot2)
data("diamonds")
head(diamonds)
tail(diamonds)
head(diamonds,10)
str(diamonds)
dim(diamonds)
summary(diamonds)
package_name <- "psych"
if (!requireNamespace(package_name, quietly = TRUE)) {
install.packages(package_name)
}
library(psych)
describe(diamonds)
hist(diamonds$carat)
hist(diamonds$carat, col='aquamarine', ylab = "")
hist(diamonds$carat, col='aquamarine', xlab = "Carat")
boxplot(diamonds)
boxplot(diamonds$price)
boxplot(diamonds$price,
xlab="price",
ylab="Values")
boxplot(carat ~ price , data = diamonds,
xlab = "price",
ylab = "Carat",
main = "Boxplot of carat by price")
plot(diamonds$carat, diamonds$clarity)
trans_dist <- table(diamonds$color)
pie(trans_dist,
labels = c("E", "I", "J", "H"),
main = "colors of diamonds")
pairs(diamonds[, c("carat", "price", "depth", "table")],
main = "Scatterplot Matrix")
package_name <- "ggplot2"
if (!requireNamespace(package_name, quietly = TRUE)) {
install.packages(package_name)
}
library(ggplot2)
ggplot(diamonds, aes(x = carat),) +
geom_histogram()
ggplot(diamonds, aes(x = carat, fill = cut)) +
geom_histogram(bins = 30, position = "identity", alpha = 0.5) +
theme_minimal() +
labs(title = "Distribution of Diamond Carat Sizes by Cut",
x = "Carat",
y = "Count",
fill = "Cut")
ggplot(diamonds, aes(x = carat)) +
geom_histogram(fill = 'aquamarine', bins = 5) +
xlab("")
ggplot(diamonds, aes(x= factor('depth'),y=depth)) +
geom_boxplot()+
ylab("Value") +
xlab("depth")
ggplot(diamonds, aes(x= factor(cut),y=color))+
geom_boxplot()+
xlab("carat") +
ylab("price") +
ggtitle("Box plot of carat by price")
ggplot(diamonds, aes(x = carat, y = depth)) +
geom_point()
packages_to_install <- c("ggplot2", "factoextra")
for (package_name in packages_to_install) {
if (!requireNamespace(package_name, quietly = TRUE)) {
install.packages(package_name)
}
}
packages_to_install <- c("ggplot2", "factoextra")
for (package_name in packages_to_install) {
if (!requireNamespace(package_name, quietly = TRUE)) {
install.packages(package_name)
}
}
library(ggplot2)
library(factoextra)
set.seed(7696)
data = read.csv("Mall_Customers.csv")
filtered_data1= data[, c("Annual_Income","Spending_Score")]
ggplot(data, aes(x= Annual_Income, y= Spending_score))+ geom_point()
ggplot(data, aes(x= Annual_Income, y= Spending_score))+
geom_point()
ggplot(data, aes(x= Annual_Income, y= Spending_Score))+
geom_point()
clusters=kmeans(filtered_data1, 5)
clusters
cluster_index = as.factor(clusters$cluster)
ggplot(filtered_data1, aes(x=Annual_Income, y=Spending_Score, color= cluster_index )) +
geom_point()
filtered_data2= data[, c("Annual_Income","Spending_Score")]
cluster2= kmeans(filtered_data2, 5)
cluster2
fviz_cluster(cluster2, data= filtered_data2, geom= c("point"))
cluster3= kmeans(filtered_data2, 5 , nstart=25)
cluster3
fviz_cluster(cluster3, data= filtered_data2, geom= c("point"))
filtered_data2= data[, c("Age","Annual_Income","Spending_Score")]
cluster2= kmeans(filtered_data2, 5)
cluster2
fviz_cluster(cluster2, data= filtered_data2, geom= c("point"))
cluster3= kmeans(filtered_data2, 5 , nstart=25)
cluster3
fviz_cluster(cluster3, data= filtered_data2, geom= c("point"))
